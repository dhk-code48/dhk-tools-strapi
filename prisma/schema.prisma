// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum UserRole {
  ADMIN
  LIBRARIAN
}

model User {
  id                 String    @id @default(cuid())
  name               String?
  email              String?   @unique
  emailVerified      DateTime?
  password           String?
  role               UserRole  @default(LIBRARIAN)
  image              String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  id           String   @id @default(uuid())
  name         String
  imageUrl     String
  bannerUrl    String?
  
  authors        String
  publication   String
  price         String
  stock         Int
  total         Int
  totalPages    String

  categoryId   String
  category     Category @relation("BookToCategory", fields: [categoryId], references: [id])
  issues    IssueRecord[]   @relation("IssueRecordToBook")

  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  @@index([categoryId])
}

model Category {
  id       String   @id @default(uuid())
  name     String
  books    Book[]   @relation("BookToCategory")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model IssueRecord {
  id       String   @id @default(uuid())

  bookId  String
  book    Book @relation("IssueRecordToBook",fields: [bookId],references: [id])

  memberId  String
  member Member @relation("IssueRecordToMember",fields: [memberId],references: [id])

  returnState Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model Member {
  id       String   @id @default(uuid())
  name    String
  phone String
  address String
  issueRecords IssueRecord[] @relation("IssueRecordToMember")


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}